[tool.poetry]
name = "synavate"
version = "0.0.1"
description = "Synavate Utility Library"
authors = ["Synavate Labs"]
license = "MIT"
packages = [
    { include = "synutils", from = "src" }
]
readme = "README.md"
repository = "https://github.com/snyata/synavate_utils"


[tool.poetry.dependencies]
python = ">=3.9.0,<4.0"
recommonmark = "^0.7.1"
chromadb = "^0.5.3"
jinja2 = "^3.1.4"
openai = "^1.35.13"
datetime = "^5.5"
black = "^24.4.2"
isort = "^5.13.2"
flake8 = "^7.1.0"
pyarrow = "^17.0.0"
fastapi = "^0.111.1"
uvicorn = "^0.30.1"



[tool.poetry.group.test.dependencies]
pytest = "^7.3.0"
pytest-cov = "^4.0.0"
pytest-dotenv = "^0.5.2"
pytest-asyncio = "^0.20.3"
pytest-mock  = "^3.10.0"
aiosqlite = "^0.19.0"
grandalf = "^0.8"
mypy = "^1.6.0"
ruff = "^0.1.4"
jupyter = "^1.0.0"
dataclasses-json = "^0.6.7"
recommonmark = "^0.7.1"
tree = "^0.2.4"


[tool.poetry.group.test]
optional = true

[tool.ruff]
lint.select = [ "E", "F", "I" ]
lint.ignore = [ "E501" ]
line-length = 88
indent-width = 4
extend-include = ["*.ipynb"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.mypy]
ignore_missing_imports = "True"
disallow_untyped_defs = "True"
exclude = ["notebooks", "examples", "example_data"]

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest-watcher]
now = true
delay = 0.1
runner_args = ["-x", "--ff", "-vv", "--snapshot-update"]
patterns = ["*.py"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
# --strict-markers will raise errors on unknown marks.
# https://docs.pytest.org/en/7.1.x/how-to/mark.html#raising-errors-on-unknown-marks
#
# https://docs.pytest.org/en/7.1.x/reference/reference.html
# --strict-config       any warnings encountered while parsing the `pytest`
#                       section of the configuration file raise errors.
#
# https://github.com/tophat/syrupy
# --snapshot-warn-unused    Prints a warning on unused snapshots rather than fail the test suite.
addopts = "--full-trace --strict-markers --strict-config --durations=5 --snapshot-warn-unused"
# Registering custom markers.
# https://docs.pytest.org/en/7.1.x/example/markers.html#registering-markers
